# Copyright (c) 2024-2025 goldfishthebountyhunter
 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.


# * Introduction.
# These Application Standard Terms And Conditions (these “Terms” or these “Application Standard Terms And Conditions”) contained herein on this application, shall govern your use of this software, including all options and pages within this application (collectively referred to herein below as this “Application”). These Terms apply in full force and effect to your use of this Application and by using this Application, you expressly accept all terms and conditions contained herein in full. You must not use this Application, if you have any objection to any of these Application Standard Terms And Conditions.
# This Application is not for use to cheat and hack. The Application is fully intended for educational purposes.
# * Intellectual Property Rights.
# Other than content you own, which you may have opted to include on this Application, under these Terms, Cyborg Elf and/or its licensors own all rights to the intellectual property and material contained in this Application, and all such rights are reserved.
# You are granted a limited license only, subject to the restrictions provided in these Terms, for purposes of viewing the material contained on this Application,
# * Restrictions.
# You are expressly and emphatically restricted from all of the following:
# * publishing any Application material in any media;
# * selling, sublicensing and/or otherwise commercializing any Application material;
# * publicly performing and/or showing any Appication material;
# * using this Application in any way that is, or may be, damaging to this Application or others;
# * using this Application in any way that impacts other users;
# * using this Application contrary to applicable laws and regulations, or in a way that causes, or may cause, harm to the Application, or to any person or business entity;
# * engaging in any data mining, data harvesting, data extracting or any other similar activity in relation to this Application, or while using this Application;
# * using this Application to engage in any advertising or marketing;
# Certain areas of this Application are restricted from access by you and Cyborg Elf may further restrict access by you to any areas of this Application, at any time, in its sole and absolute discretion.  Any user information you may have for this Application are confidential and you must maintain confidentiality of such information.
# * Your Content.
# In these Application Standard Terms And Conditions, “Your Content” shall mean any audio, video, text, images or other material you choose to display on this Application. With respect to Your Content, by displaying it, you grant Cyborg Elf a non-exclusive, worldwide, irrevocable, royalty-free, sublicensable license to use, reproduce, adapt, publish, translate and distribute it in any and all media.
# Your Content must be your own and must not be infringing on any third party’s rights. Cyborg Elf reserves the right to remove any of Your Content from this Application at any time, and for any reason, without notice.
# * No warranties.
# This Application is provided “as is,” with all faults, and Cyborg Elf makes no express or implied representations or warranties, of any kind related to this Application or the materials contained on this Application. Additionally, nothing contained on this Application shall be construed as providing consult or advice to you.
# * Limitation of liability.
# In no event shall Cyborg Elf, nor any of its officers, directors and employees, be liable to you for anything arising out of or in any way connected with your use of this Application, whether such liability is under contract, tort or otherwise, and Cyborg Elf, including its officers, directors and employees shall not be liable for any indirect, consequential or special liability arising out of or in any way related to your use of this Application.
# * Indemnification.
# You hereby indemnify to the fullest extent Cyborg Elf from and against any and all liabilities, costs, demands, causes of action, damages and expenses (including reasonable attorney’s fees) arising out of or in any way related to your breach of any of the provisions of these Terms.
# * Severability.
# If any provision of these Terms is found to be unenforceable or invalid under any applicable law, such unenforceability or invalidity shall not render these Terms unenforceable or invalid as a whole, and such provisions shall be deleted without affecting the remaining provisions herein.
# * Variation of Terms.
# Cyborg Elf is permitted to revise these Terms at any time as it sees fit, and by using this Application you are expected to review such Terms on a regular basis to ensure you understand all terms and conditions governing use of this Application.
# * Assignment.
# Cyborg Elf shall be permitted to assign, transfer, and subcontract its rights and/or obligations under these Terms without any notification or consent required. However, .you shall not be permitted to assign, transfer, or subcontract any of your rights and/or obligations under these Terms.
# * Entire Agreement.
# These Terms, including any legal notices and disclaimers contained on this Application, constitute the entire agreement between Cyborg Elf and you in relation to your use of this Application, and supersede all prior agreements and understandings with respect to the same.
# * Governing Law & Jurisdiction.
# These Terms will be governed by and construed in accordance with the laws of the United States, and you submit to the non-exclusive jurisdiction of the state and federal courts located in the United States for the resolution of any disputes.

Install Flask
Mkdir
Make venv and source in dir
pip install flask

Set Static Ip.sh <------------------------------------------------------------------------------------------------------------
nmcli --version # Get Version / Verify Installed
hostname -I && ip r && Netsh WLAN show interfaces # Get Current IP, Router, Wifi SSID
echo "So Far So Good.."
echo "Default IP Set to 153"
sudo nmcli con mod preconfigured ipv4.addresses 192.168.0.153/24
sudo nmcli con mod preconfigured ipv4.gateway 192.168.0.1
sudo nmcli con mod preconfigured ipv4.dns 8.8.8.8
sudo nmcli con mod preconfigured ipv4.method manual
sudo nmcli con down preconfigured && sudo nmcli con up preconfigured
echo "done.."

App.py <------------------------------------------------------------------------------------------------------------

from flask import Flask, request, render_template_string, send_from_directory
import os

app = Flask(__name__)
UPLOAD_FOLDER = '/home/pi/uploaded_files'
os.makedirs(UPLOAD_FOLDER, exist_ok=True)

HTML_FORM = '''
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">
<title>FTP_KITCHEN_DROPBOX</title>
<style>
body {
  background: linear-gradient(196deg,#ec97ff,#ba31d4,#ff8ac8,#783db5,#ffd68e,#037461,#000000);
  background-size: 420% 420%;
  animation: gradient-animation 42s ease infinite;
}

@keyframes gradient-animation {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}
h1   {color: blue;}
h2    {color: red;}
ul    {color: yellow;}
</style>
<script></script>
</head>
<body>
<h1>Upload File // ¯\_(ツ)_/¯</h1>
<form method=post enctype=multipart/form-data>
  <input type=file name=file>
  <input type=submit value=Upload>
</form>

<h2>Uploaded Files</h2>
<ul>
{% for file in files %}
  <li><a href="/uploads/{{ file }}">{{ file }}</a></li>
{% else %}
  <li>No files uploaded yet.</li>
{% endfor %}
</ul>
<footer>
<a href="https://super-mario-64.gitlab.io/file/">SM64</a>
</footer>
</body>
</html>
'''

@app.route('/', methods=['GET', 'POST'])
def upload_file():
    files = os.listdir(UPLOAD_FOLDER)  # Get list of uploaded files
    if request.method == 'POST':
        uploaded_file = request.files['file']
        if uploaded_file.filename != '':
            # Ensure filename is safe
            filename = uploaded_file.filename
            file_path = os.path.join(UPLOAD_FOLDER, filename)
            uploaded_file.save(file_path)
            return render_template_string(HTML_FORM, files=files)
    return render_template_string(HTML_FORM, files=files)

@app.route('/uploads/<filename>')
def uploaded_file(filename):
    return send_from_directory(UPLOAD_FOLDER, filename)

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=12222)

